name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${DEV_DB_PASSWORD}
          MYSQL_DATABASE: gocar_test
          MYSQL_USER: ${DEV_DB_USERNAME}
          MYSQL_PASSWORD: ${DEV_DB_PASSWORD}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: List current directory
        run: pwd

      - name: List files in backend
        run: ls -la

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Run tests
        env:
          DATABASE_URL: mysql://root:hvqSpNRnsNFVfnOf@127.0.0.1:3306/gocar_test
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: npm test

      - name: Build Docker images
        run: |
          docker build -t my-backend-image .
          docker build -t my-frontend-image ../frontend-gocar

      - name: Push Docker images
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
          docker push my-backend-image
          docker push my-frontend-image

      - name: Deploy to Railway
        env:
          RAILWAY_API_KEY: ${{ secrets.RAILWAY_API_KEY }}
        run: |
          curl -X POST "https://api.railway.app/v1/projects/{project_id}/deploy" \
          -H "Authorization: Bearer $RAILWAY_API_KEY" \
          -H "Content-Type: application/json" \
          -d '{"branch": "${{ github.ref }}" }'
